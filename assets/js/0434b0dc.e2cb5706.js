"use strict";(self.webpackChunkpterodocs=self.webpackChunkpterodocs||[]).push([[3],{1512:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"egg-advanced/docker-images","title":"Creating your own Docker Images","description":"All Pterodactyl containers must have a user named container, and the user home must be /home/container","source":"@site/docs/egg-advanced/docker-images.md","sourceDirName":"egg-advanced","slug":"/egg-advanced/docker-images","permalink":"/docs/egg-advanced/docker-images","draft":false,"unlisted":false,"editUrl":"https://github.com/Ptero-Egg-Docs/eggdocs/tree/master/docs/egg-advanced/docker-images.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"advancedSidebar","previous":{"title":"Overview of Yolks","permalink":"/docs/egg-advanced/docker-image-info"}}');var t=i(4848),a=i(8453);const s={sidebar_position:3},o="Creating your own Docker Images",c={},l=[{value:"Dockerfile Example",id:"dockerfile-example",level:2},{value:"Breakdown of the Dockerfile",id:"breakdown-of-the-dockerfile",level:2},{value:"Base Image",id:"base-image",level:3},{value:"Metadata Labels",id:"metadata-labels",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"User Setup",id:"user-setup",level:3},{value:"Switch User &amp; Set Environment",id:"switch-user--set-environment",level:3},{value:"Working Directory",id:"working-directory",level:3},{value:"Entrypoint Setup",id:"entrypoint-setup",level:3},{value:"Entry Command",id:"entry-command",level:3},{value:"Example entrypoint.sh",id:"example-entrypointsh",level:2},{value:"This script pairs with the Dockerfile above:",id:"this-script-pairs-with-the-dockerfile-above",level:4},{value:"Breakdown",id:"breakdown",level:3},{value:"Final Notes",id:"final-notes",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"creating-your-own-docker-images",children:"Creating your own Docker Images"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["All Pterodactyl containers must have a user named ",(0,t.jsx)(n.code,{children:"container"}),", and the user home must be ",(0,t.jsx)(n.code,{children:"/home/container"})]})}),"\n",(0,t.jsxs)(n.p,{children:["This guide explains how to create a custom Docker image for use with Pterodactyl eggs, using a modern base example from the ",(0,t.jsx)(n.a,{href:"https://github.com/Ptero-Eggs/yolks/tree/main",children:"Ptero-Eggs yolks repository"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Docker images define the environment in which a server runs\u2014what software is installed, what versions are used, and how everything is launched. Custom images allow you to add packages or modify behavior beyond what official yolks provide."}),"\n",(0,t.jsx)(n.h2,{id:"dockerfile-example",children:"Dockerfile Example"}),"\n",(0,t.jsx)(n.p,{children:"Here\u2019s a full Dockerfile example using Java 21 as the base image:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:'FROM --platform=$TARGETOS/$TARGETARCH eclipse-temurin:21-jdk-jammy\n\nLABEL author="Michael Parker" maintainer="[email\xa0protected]"\nLABEL org.opencontainers.image.source="https://github.com/pterodactyl/yolks"\nLABEL org.opencontainers.image.licenses=MIT\n\nRUN apt update -y \\\n    && apt install -y \\\n    curl \\\n    lsof \\\n    ca-certificates \\\n    openssl \\\n    git \\\n    tar \\\n    sqlite3 \\\n    fontconfig \\\n    tzdata \\\n    iproute2 \\\n    libfreetype6 \\\n    tini \\\n    zip \\\n    unzip\n\nRUN useradd -m -d /home/container -s /bin/bash container\n\nUSER container\nENV USER=container HOME=/home/container\nWORKDIR /home/container\n\nCOPY --chown=container:container ./entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nENTRYPOINT ["/usr/bin/tini", "-g", "--"]\nCMD ["/entrypoint.sh"]\n'})}),"\n",(0,t.jsx)(n.h2,{id:"breakdown-of-the-dockerfile",children:"Breakdown of the Dockerfile"}),"\n",(0,t.jsx)(n.h3,{id:"base-image",children:"Base Image"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:"FROM --platform=$TARGETOS/$TARGETARCH eclipse-temurin:21-jdk-jammy\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Uses Eclipse Temurin Java 21 JDK on Ubuntu Jammy. The ",(0,t.jsx)(n.code,{children:"--platform"})," flag ensures compatibility with different system architectures."]}),"\n",(0,t.jsx)(n.h3,{id:"metadata-labels",children:"Metadata Labels"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:'LABEL author="..."\n'})}),"\n",(0,t.jsx)(n.p,{children:"Provides metadata such as author, source, and license. Useful for documentation."}),"\n",(0,t.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:"RUN apt update -y && apt install -y [...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Installs useful server packages:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"curl"}),", ",(0,t.jsx)(n.code,{children:"lsof"}),", ",(0,t.jsx)(n.code,{children:"openssl"}),": Common CLI tools."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fontconfig"}),", ",(0,t.jsx)(n.code,{children:"libfreetype6"}),": Support Java-based GUI rendering."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tini"}),": Handles signal forwarding and zombie reaping."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"user-setup",children:"User Setup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:"RUN useradd -m -d /home/container -s /bin/bash container\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Creates a non-root user ",(0,t.jsx)(n.code,{children:"container"})," to enhance security."]}),"\n",(0,t.jsx)(n.h3,{id:"switch-user--set-environment",children:"Switch User & Set Environment"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:"USER container\nENV USER=container HOME=/home/container\n"})}),"\n",(0,t.jsx)(n.p,{children:"Switches to the new user and sets key environment variables."}),"\n",(0,t.jsx)(n.h3,{id:"working-directory",children:"Working Directory"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:"WORKDIR /home/container\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sets the default working directory."}),"\n",(0,t.jsx)(n.h3,{id:"entrypoint-setup",children:"Entrypoint Setup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:"COPY --chown=container:container ./entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n"})}),"\n",(0,t.jsx)(n.p,{children:"Copies the startup script and ensures it\u2019s executable."}),"\n",(0,t.jsx)(n.h3,{id:"entry-command",children:"Entry Command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:'ENTRYPOINT ["/usr/bin/tini", "-g", "--"]\nCMD ["/entrypoint.sh"]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Uses ",(0,t.jsx)(n.code,{children:"tini"})," to launch the container and execute the custom startup script."]}),"\n",(0,t.jsx)(n.h2,{id:"example-entrypointsh",children:"Example entrypoint.sh"}),"\n",(0,t.jsx)(n.p,{children:"In order to complete this Dockerfile, we will need an entrypoint.sh file which tells Docker how to run this specific server type."}),"\n",(0,t.jsx)(n.p,{children:"These entrypoint files are actually fairly abstracted, and the Daemon will pass in the start command as an environment variable before processing it and then executing the command."}),"\n",(0,t.jsx)(n.h4,{id:"this-script-pairs-with-the-dockerfile-above",children:"This script pairs with the Dockerfile above:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\n# Default the TZ environment variable to UTC.\nTZ=${TZ:-UTC}\nexport TZ\n\n# Set environment variable that holds the Internal Docker IP\nINTERNAL_IP=$(ip route get 1 | awk \'{print $(NF-2);exit}\')\nexport INTERNAL_IP\n\n# Switch to the container\'s working directory\ncd /home/container || exit 1\n\n# Print Java version\nprintf "\\033[1m\\033[33mcontainer@pterodactyl~ \\033[0mjava -version\\n"\njava -version\n\n# Convert all of the "{{VARIABLE}}" parts of the command into the expected shell\n# variable format of "${VARIABLE}" before evaluating the string and automatically\n# replacing the values.\nPARSED=$(echo "${STARTUP}" | sed -e \'s/{{/${/g\' -e \'s/}}/}/g\' | eval echo "$(cat -)")\n\n# Display the command we\'re running in the output, and then execute it with the env\n# from the container itself.\nprintf "\\033[1m\\033[33mcontainer@pterodactyl~ \\033[0m%s\\n" "$PARSED"\n# shellcheck disable=SC2086\neval ${PARSED}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"breakdown",children:"Breakdown"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Navigates to the working directory."}),"\n",(0,t.jsx)(n.li,{children:"Outputs the Java version for confirmation."}),"\n",(0,t.jsxs)(n.li,{children:["Processes and expands the Pterodactyl ",(0,t.jsx)(n.code,{children:"STARTUP"})," variable."]}),"\n",(0,t.jsx)(n.li,{children:"Executes the startup command."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"final-notes",children:"Final Notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["User home must be ",(0,t.jsx)(n.code,{children:"/home/container"})]}),"\n",(0,t.jsxs)(n.li,{children:["All Pterodactyl containers must have a user named ",(0,t.jsx)(n.code,{children:"container"})]}),"\n",(0,t.jsxs)(n.li,{children:["Always run as a ",(0,t.jsx)(n.strong,{children:"non-root"})," user in Pterodactyl containers."]}),"\n",(0,t.jsxs)(n.li,{children:["Build and test locally with: ",(0,t.jsx)(n.code,{children:"docker build -t my-image ."})]}),"\n",(0,t.jsx)(n.li,{children:"Push images to Docker Hub or private registry and specify them in the egg under Docker Image, or run the image locally first if you want to ensure it functions as expected"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Creating a custom Docker image lets you fully control the server for uncommon games or special dependencies."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var r=i(6540);const t={},a=r.createContext(t);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);